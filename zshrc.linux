# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
# To install gcloud sdk:
#   curl https://sdk.cloud.google.com | bash

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

git_branch() {
  local ref=$(git symbolic-ref --short HEAD 2> /dev/null)
  if [ -n "${ref}" ]; then
    echo " (${ref})"
  else
    echo ""
  fi
}

cdgr() {
  REPO_ROOT=$(git rev-parse --show-toplevel 2>/dev/null)
  if [[ -z $REPO_ROOT ]]; then
    echo "Error: Not a git repository (or any of the parent directories): .git" >&2
    return 1
  fi
  # If no input we can go to the root of this repo
  [[ $# -eq 0 ]] && cd $REPO_ROOT && return 0

  if [[ $1 == ${REPO_ROOT}* ]]; then
    cd $(dirname $1) && return 0
  fi

  DST=$REPO_ROOT/$1
  # First we will test the input, if it's a directory
  # we can go to directly
  [[ -d $DST ]] && cd $DST && return 0
  # Otherwise, if the destination is a file, we can strip
  # the filename and change the directory to the output
  [[ -f $DST ]] && cd $(dirname $DST) && return 0
  # return error if no match
  echo "$DST: No such file or directory" >&2 && return 1
}

kubectl() {
  if ! type __start_kubectl >/dev/null 2>&1; then
      source <(command kubectl completion zsh)
  fi
  command kubectl "$@"
}

helm() {
  if ! type __start_helm >/dev/null 2>&1; then
      source <(command helm completion zsh)
  fi
  command helm "$@"
}

PROMPT="%F{10}%n"
PROMPT+="@"
PROMPT+='${${(%):-%m}#anhdv-}%f:%F{12}%(4~|.../%3~|%~)%f%F{13}$(git_branch)%f'
PROMPT+='$ '

export GPG_TTY=$(tty)
export EDITOR='nvim'
export PATH=/usr/local/sbin:$PATH
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export USE_GKE_GCLOUD_AUTH_PLUGIN=True
plugins=(git zsh-autocomplete zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh
alias vim="nvim"
alias vi="nvim"
alias zconfig="vim ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias tconfig="vim ~/.tmux.conf"
alias resh="exec $SHELL"
alias lg="lazygit"
alias mp="mkdir -p"
alias hs="history"
alias vc="vault-converter"
alias wk="watch kubectl"
alias vk="viddy -n1 kubectl"
alias oapp="open -a"
alias ll="exa -lag"
alias t="tmux"
alias tn="tmux new -s"
alias ta="tmux a -t"
alias tl="tmux ls"
alias tk="tmux kill-session -t"
alias tka="tmux kill-session -a"
alias tkat="tmux kill-session -at"
alias ts="tmux switch -t"
alias tiga="tig --all"
alias dc="docker-compose"
alias dcu="dc up"
alias dcd="dc down"
alias dcs="dc stop"
alias tp="telepresence"
alias k="kubectl"
alias ktun="k tunnel"
alias ktop="k ktop"
alias kctx="kubectl ctx"
alias kns="kubectl ns"
alias pbcopy='xsel --clipboard --input'
alias pbpaste='xsel --clipboard --output'
alias vg="vagrant"
alias reset-gpg="gpgconf --kill gpg-agent"
alias glp="git pull && git push"
# Minikube
alias mkk="minikube kubectl --"
alias mks="minikube start"
export PATH=/usr/lib/google-cloud-sdk/bin:$PATH
export PATH=${KREW_ROOT:-$HOME/.krew}/bin:$PATH

# source <(/home/ubuntu/google-cloud-sdk/bin/kubectl completion zsh)


## =============================
command_exists () {
  type "$1" &> /dev/null ;
}
## =============================

# load bash autocomplete
autoload -U +X bashcompinit && bashcompinit

## TERRAFORM
if command_exists terraform; then
  alias tf="terraform"
  complete -o nospace -C /usr/local/bin/terraform terraform
fi

## TERRAGRUNT
if command_exists terragrunt; then
  alias tg="terragrunt"
  complete -C /usr/local/bin/terraform terragrunt
fi

## VAULT
if command_exists vault; then
  complete -o nospace -C /usr/local/bin/vault vault
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && \. "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion


complete -C ~/.bin/terraform

export PATH="${PATH}:${HOME}/.krew/bin"
export GPG_TTY=$(tty)

[[ -f ~/.iterm2_shell_integration.zsh ]] && source ~/.iterm2_shell_integration.zsh

[ -f /usr/share/google-cloud-sdk/completion.zsh.inc ] && source /usr/share/google-cloud-sdk/completion.zsh.inc
[ -f "$HOME/.zprofile" ] && source ~/.zprofile

export GO_PATH=~/go
export PATH=$PATH:/$GO_PATH/bin
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/ubuntu/google-cloud-sdk/path.zsh.inc' ]; then . '/home/ubuntu/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/ubuntu/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/ubuntu/google-cloud-sdk/completion.zsh.inc'; fi

export VCPKG_ROOT="$HOME/vcpkg"
export PATH="/home/linuxbrew/.linuxbrew/opt/llvm@15/bin:$PATH"
# export PATH="/home/linuxbrew/.linuxbrew/opt/clang-format/bin:$PATH"
